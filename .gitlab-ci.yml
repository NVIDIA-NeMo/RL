workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
- test

default:
  before_script:
    - env
    - pwd
    - |
      if [ -f ~/.venv/bin/activate ]; then
        source ~/.venv/bin/activate
        pip install --upgrade pip setuptools wheel
        uv pip install --upgrade pip setuptools wheel
      fi
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN "${CI_REGISTRY}"
    - export DOCKER_REGISTRY="${CI_REGISTRY/:5005/}"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN "${DOCKER_REGISTRY}"

lint:
  tags:
    - ${DOCKER_RUNNER}
  stage: test
  script:
    - pip install pre-commit
    - pre-commit install
    - pre-commit run --all-files --show-diff-on-failure --color=always

docs_build:
  tags:
    - ${DOCKER_RUNNER}
  stage: test
  script:
    - pip install uv
    - uv venv -p python3.12.3 .venv
    - cd docs/
    - uv run --extra docs sphinx-build . _build/html

docs_test:
  tags:
    - ${DOCKER_RUNNER}
  stage: test
  script:
    - pip install uv
    - uv venv -p python3.10 .venv
    - cd docs/
    - uv run --extra docs sphinx-build -b doctest . _build/html

copyright:
  tags:
    - ${DOCKER_RUNNER}
  stage: test
  script:
    - bash -x tools/copyright.sh

unit_tests:
  tags:
    - ${DOCKER_RUNNER}
  stage: test
  variables:
    HF_TOKEN: ${HF_TOKEN}
    UV_CACHE_DIR: ${UV_CACHE_DIR}
    CONTAINER: ${CI_TEST_IMAGE}
  script:
    # Pull the latest test container
    - docker pull ${CONTAINER}
    - CONTAINER=${CONTAINER} bash tests/run_unit_in_docker.sh
