# GRPO Algorithm Configuration
grpo:
  num_prompts_per_step: 8
  num_generations_per_prompt: 8
  max_num_steps: 100
  normalize_rewards: true
  use_leave_one_out_baseline: true
  val_period: 10
  val_at_start: true
  max_val_samples: 16
  val_batch_size: 16

loss_fn:
  reference_policy_kl_penalty: 0.01
  ratio_eps: 0.2

checkpointing:
  enabled: true
  checkpoint_dir: "results/grpo"
  metric_name: "val_reward"
  higher_is_better: true
  keep_top_k: 3
  save_period: 10

policy:
  model_name: "meta-llama/Llama-3.2-1B-Instruct"
  train_global_batch_size: 32
  train_micro_batch_size: 4
  generation_batch_size: 32
  learning_rate: 5.0e-6
  logprob_batch_size: 4
  max_total_sequence_length: 512

  scheduler:
    - name: "torch.optim.lr_scheduler.LinearLR"
      kwargs:
        start_factor: 0.1
        end_factor: 1.0
        total_iters: 50
    - name: "torch.optim.lr_scheduler.ConstantLR"
      kwargs:
        factor: 1.0
        total_iters: 10000000000
    - milestones: [50]

  generation:
    backend: "vllm"
    max_new_tokens: ${policy.max_total_sequence_length}
    temperature: 1.0
    top_p: 1.0
    top_k: null
    vllm_cfg:
      tensor_parallel_size: 1
      gpu_memory_utilization: 0.7
      max_model_len: ${policy.max_total_sequence_length}

data:
  max_input_seq_length: ${policy.max_total_sequence_length} # upper bound, real truncation occurs at vllm.max_model_len
  prompt_file: "examples/prompts/cot.txt"
  system_prompt_file: null
  dataset_name: "datasets/Eurus-2-RL-Data/Eurus-2-RL-Data-math_train.jsonl"
  val_dataset_name: "datasets/Eurus-2-RL-Data/Eurus-2-RL-Data-math_val.jsonl"

env:
  math:
    num_workers: 8

logger:
  log_dir: "logs"  # Base directory for all logs
  num_val_samples_to_print: 0 # Number of validation samples to pretty print on terminal
  wandb_enabled: false
  tensorboard_enabled: false
  wandb:
    project: "grpo-dev"
    name: "grpo-dev-logger"
  tensorboard: {}

cluster:
  gpus_per_node: 1
  num_nodes: 1