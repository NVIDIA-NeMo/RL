checkpointing:
  enabled: False
  save_period: 10
  keep_top_k: 1

grpo:
  normalize_rewards: True
  use_leave_one_out_baseline: True
  max_num_steps: 1000000
  num_prompts_per_step: 64
  num_generations_per_prompt: 16
  val_period: 10
  val_at_start: False
  max_val_samples: 256
  val_batch_size: 256

loss_fn:
  reference_policy_kl_penalty: 0.01
  ratio_clip_min: 0.2
  ratio_clip_max: 0.2
  # (default off) loss formulation improvements (docs/guides/grpo.md#loss)
  use_on_policy_kl_approximation: False
  use_importance_sampling_correction: False
  token_level_loss: true
  ratio_clip_c: null

policy:
  model_name: "Qwen/Qwen3-30B-A3B"
  tokenizer:
    name: ${policy.model_name} ## specify if you'd like to use a tokenizer different from the model's default
  train_global_batch_size: 512
  train_micro_batch_size: 1
  generation_batch_size: 32 # Only used when generating using HF backend
  logprob_batch_size: 1
  max_total_sequence_length: 32768
  precision: "bfloat16"
  activation_checkpointing_enabled: True
  logprob_chunk_size: 2048

  dtensor_cfg:
    enabled: False

  dynamic_batching:
    enabled: False

  sequence_packing:
    enabled: False

  max_grad_norm: 1.0
  make_sequence_length_divisible_by: ${policy.megatron_cfg.tensor_model_parallel_size}

  optimizer: null # remove default FSDP optimizer

  scheduler: null # remove default FSDP scheduler

  megatron_cfg:
    enabled: true
    empty_unused_memory_level: 1
    converter_type: "LlamaForCausalLM"
    tensor_model_parallel_size: 4
    pipeline_model_parallel_size: 1
    context_parallel_size: 1
    expert_tensor_parallel_size: 1
    expert_model_parallel_size: 8
    sequence_parallel: True
    pipeline_dtype: ${policy.precision}
    freeze_moe_router: True
    moe_router_dtype: "fp64"
    moe_router_load_balancing_type: "none" # "seq_aux_loss" causes logprob error divergence for grpo
    moe_router_bias_update_rate: 0.0 # by default, disable bias updates for grpo
    apply_rope_fusion: True
    activation_checkpointing: True
    deferred_fp32_logits: True

    optimizer:
      optimizer: "adam"
      # lr: 3.0e-7
      # min_lr: 3.0e-8
      lr: 5.0e-7
      min_lr: 5.0e-8
      weight_decay: 0.0
      # weight_decay: 0.01
      bf16: True
      fp16: False
      params_dtype: "float32"

      adam_beta1: 0.9
      adam_beta2: 0.999
      adam_eps: 1e-8

      use_distributed_optimizer: true
      use_precision_aware_optimizer: true

      clip_grad: ${policy.max_grad_norm}

    scheduler:
      start_weight_decay: ${policy.megatron_cfg.optimizer.weight_decay}
      end_weight_decay: ${policy.megatron_cfg.optimizer.weight_decay}
      weight_decay_incr_style: "constant"
      lr_decay_style: "constant"
      lr_decay_iters: null
      # lr_warmup_iters: 13
      # lr_warmup_init: 3.0e-8
      lr_warmup_iters: 4
      lr_warmup_init: 5.0e-8

    distributed_data_parallel_config:
      grad_reduce_in_fp32: false
      overlap_grad_reduce: true
      overlap_param_gather: true
      average_in_collective: true
      use_custom_fsdp: false
      data_parallel_sharding_strategy: "optim_grads_params"
    
    env_vars:
      PYTORCH_CUDA_ALLOC_CONF: "expandable_segments:False"

  generation:
    backend: "vllm"
    max_new_tokens: ${policy.max_total_sequence_length}
    temperature: 1.0
    top_p: 1.0
    top_k: null
    stop_token_ids: null
    stop_strings: null
    vllm_cfg:
      tensor_parallel_size: 4
      gpu_memory_utilization: 0.6
      # NB(pjin): https://github.com/NVIDIA-NeMo/RL/pull/857
      enforce_eager: True
      max_model_len: ${policy.max_total_sequence_length}

data:
  max_input_seq_length: ${policy.max_total_sequence_length} # upper bound, real truncation occurs at vllm.max_model_len
  prompt_file: "examples/prompts/cot.txt"
  # prompt_file: null
  system_prompt_file: null
  # dataset_name: null

env:
  math:
    num_workers: 8

logger:
  log_dir: "logs"  # Base directory for all logs
  num_val_samples_to_print: 0 # Number of validation samples to pretty print on terminal
  wandb_enabled: false
  tensorboard_enabled: false
  mlflow_enabled: false  # Disable MLflow logging
  monitor_gpus: false  # If true, will monitor GPU usage and log to wandb and/or tensorboard
  wandb:
    project: "grpo-dev"
    name: "sj_megatron_1B"
  tensorboard: {}
  mlflow:
    experiment_name: "grpo-dev"
    run_name: "sj_megatron_1B"
  gpu_monitoring:
    collection_interval: 10  # How often to collect GPU usage metrics (in seconds)
    flush_interval: 10  # How often to flush GPU usage metrics to the loggers (in seconds)

cluster:
  gpus_per_node: 8
  num_nodes: 4
