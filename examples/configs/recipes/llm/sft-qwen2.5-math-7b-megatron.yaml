# SFT Algorithm Configuration
defaults: ../../sft.yaml
sft:
  ## total number of steps to train will equal
  ## min((max_num_epochs * len(train_dataloader)), max_num_steps)
  max_num_epochs: 1
  max_num_steps: 80

  val_period: 10
  val_batches: 8
  val_global_batch_size: 32
  val_micro_batch_size: 1
  val_at_start: true
  seed: 42

checkpointing:
  enabled: false
  checkpoint_dir: "results/sft"
  metric_name: "val_loss" ## set to null to save most recent k checkpoints
  higher_is_better: false
  keep_top_k: 3
  save_period: 10
  checkpoint_must_save_by: null

policy:
  model_name: "Qwen/Qwen2.5-Math-7B"
  tokenizer:
    name: ${policy.model_name} ## specify if you'd like to use a tokenizer different from the model's default
  train_global_batch_size: 512
  train_micro_batch_size: 1
  generation_batch_size: 32 # Only used when generating using HF backend
  logprob_batch_size: 1 #4
  max_total_sequence_length: 16384 # max_prompt_length + max_response_length
  precision: "bfloat16"

  dtensor_cfg:
    enabled: false
  
  megatron_cfg:
    enabled: true
    empty_unused_memory_level: 1
    activation_checkpointing: false
    tensor_model_parallel_size: 4
    pipeline_model_parallel_size: 1
    num_layers_in_first_pipeline_stage: null
    num_layers_in_last_pipeline_stage: null
    context_parallel_size: 2
    expert_tensor_parallel_size: 1
    expert_model_parallel_size: 1
    pipeline_dtype: ${policy.precision}

    sequence_parallel: true
    freeze_moe_router: true
    moe_router_dtype: "fp64"
    moe_router_load_balancing_type: "seq_aux_loss" # causes logprob error divergence for grpo
    moe_aux_loss_coeff: 0.01
    moe_router_bias_update_rate: 0.0 # by default, disable bias updates for grpo
    #gives ~20% training perf speedup with sequence packing
    apply_rope_fusion: True
    moe_permute_fusion: True

    optimizer:
      optimizer: "adam"
      lr: 1.0e-6
      min_lr: 1.0e-6
      weight_decay: 0.1
      bf16: true
      fp16: false
      params_dtype: "float32"

      #adam
      adam_beta1: 0.9
      adam_beta2: 0.999
      adam_eps: 1e-8

      #sgd
      sgd_momentum: 0.9

      #distributed optimizer
      use_distributed_optimizer: False #true
      use_precision_aware_optimizer: False #true

      clip_grad: ${policy.max_grad_norm}

    scheduler:
      start_weight_decay: ${policy.megatron_cfg.optimizer.weight_decay}
      end_weight_decay: ${policy.megatron_cfg.optimizer.weight_decay}
      weight_decay_incr_style: "constant"
      lr_decay_style: "constant"
      lr_decay_iters: null
      lr_warmup_iters: 10
      lr_warmup_init: 0.00000000001

    distributed_data_parallel_config:
      grad_reduce_in_fp32: false
      overlap_grad_reduce: true
      overlap_param_gather: true
      use_custom_fsdp: false
      data_parallel_sharding_strategy: "optim_grads_params"

  dynamic_batching:
    enabled: false

  sequence_packing:
    enabled: True
    train_mb_tokens: ${mul:${policy.max_total_sequence_length}, ${policy.train_micro_batch_size}}
    logprob_mb_tokens: ${mul:${policy.max_total_sequence_length}, ${policy.logprob_batch_size}}
    algorithm: "modified_first_fit_decreasing"
    sequence_length_round: 64

  # makes the training sequence length divisible by the tensor parallel size
  # this is useful for sequence parallel training
  make_sequence_length_divisible_by: 32
  max_grad_norm: 1.0

data:
  max_input_seq_length: ${policy.max_total_sequence_length}
  dataset_name: "openmathinstruct2"
  prompt_file: examples/prompts/math.txt
  split: "train_1M"
  add_bos: true
  add_eos: true
  add_generation_prompt: true
  output_key: 'generated_solution'
  shuffle: true
  num_workers: 8

logger:
  log_dir: "logs"  # Base directory for all logs
  wandb_enabled: true # Make sure you do a ``wandb login [Your API key]'' before running
  tensorboard_enabled: true
  mlflow_enabled: false
  swanlab_enabled: false # Disable SwanLab logging
  monitor_gpus: true  # If true, will monitor GPU usage and log to wandb and/or tensorboard
  wandb:
    project: "nemo-rl"
    name: "sft-qwen2.5-math-7b-megatron"
  tensorboard:
    log_dir: "tb_logs-sft-qwen2.5-math-7b-megatron"
  mlflow:
    experiment_name: "sft-dev"
    run_name: "sft-qwen2.5-math-7b-megatron"
  gpu_monitoring:
    collection_interval: 10  # How often to collect GPU usage metrics (in seconds)
    flush_interval: 10  # How often to flush GPU usage metrics to the loggers (in seconds)

cluster:
  gpus_per_node: 8
  num_nodes: 2
