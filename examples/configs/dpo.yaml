# DPO Algorithm Configuration
dpo:
  max_num_steps: 500
  val_period: 5
  val_batches: 8
  val_global_batch_size: 8
  val_micro_batch_size: 1
  val_at_start: true
  seed: 42

  reference_policy_kl_penalty: 0.1
  ## TODO: support below
  #preference_average_log_probs: False # whether normalizing log probs according to the sequence length in preference_loss
  #sft_average_log_probs: ${.preference_average_log_probs} # whether normalizing log probs according to the sequence length in sft_loss
  #gt_reward_scale: 1. # the scale of the rewards in RPO
  #preference_loss: dpo # the preference loss, we support dpo, ipo, rpo_sq, rpo_bwd_kl, rpo_fwd_kl
  preference_loss_weight: 1 # the coefficient of the preference loss
  sft_loss_weight: 0 # the coefficient of the SFT loss

checkpointing:
  enabled: true
  checkpoint_dir: "results/dpo"
  metric_name: "val_loss"
  higher_is_better: false
  keep_top_k: 3
  save_period: 10000

policy:
  model_name: "meta-llama/Meta-Llama-3.1-8B"
  tokenizer_name: "meta-llama/Meta-Llama-3.1-8B"
  train_global_batch_size: 256
  train_micro_batch_size: 1
  logprob_batch_size: ${policy.train_micro_batch_size}
  max_total_sequence_length: 1024
  precision: "float32"
  fsdp_offload_enabled: false
  activation_checkpointing_enabled: false

  optimizer:
    name: "torch.optim.AdamW"
    kwargs:
      lr: 5.0e-6
      weight_decay: 0.1
      betas: [0.9, 0.98]
      eps: 1e-5
    
data:
  max_input_seq_length: ${policy.max_total_sequence_length}
  train_data_path: "/path/to/train.jsonl"
  val_data_path: "/path/to/val.jsonl"

logger:
  log_dir: "logs"  # Base directory for all logs
  wandb_enabled: false # Make sure you do a ``wandb login [Your API key]'' before running
  tensorboard_enabled: false
  monitor_gpus: false  # If true, will monitor GPU usage and log to wandb and/or tensorboard
  wandb:
    project: "dpo-dev"
    name: "dpo"
  tensorboard:
    log_dir: "tb_logs-dpo-dev"
  gpu_monitoring:
    collection_interval: 10  # How often to collect GPU usage metrics (in seconds)
    flush_interval: 10  # How often to flush GPU usage metrics to the loggers (in seconds)

cluster:
  gpus_per_node: 8
  num_nodes: 1
