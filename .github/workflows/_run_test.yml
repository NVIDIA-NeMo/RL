# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: ~test template

on:
  workflow_call:
    inputs:
      RUNNER:
        type: string
        description: Runner to use for test
        required: true
      TIMEOUT:
        type: number
        description: Max runtime of test in minutes
        required: false
        default: 10
      SCRIPT:
        type: string
        description: Test script to execute in container
        required: true
      AFTER_SCRIPT:
        type: string
        description: Script to run after main test in container
        required: false
        default: ":"
      FINAL_SCRIPT_EXTERNAL:
        type: string
        description: Script to run after SCRIPT and AFTER_SCRIPT, but outside container (useful for logging)
        required: false
        default: ":"
      IS_OPTIONAL:
        type: boolean
        description: Failure will cancel all other tests if set to true
        required: false
        default: false
    secrets:
      HF_TOKEN:
        required: true
    outputs:
      conclusion:
        description: Conclusion of main test step
        value: ${{ jobs.main.outputs.conclusion }}
      log:
        description: Last 2000 characters of the test step's log
        value: ${{ jobs.main.outputs.log }} 
jobs:
  
  main:
    runs-on: ${{ inputs.RUNNER }} 
    outputs:
      conclusion: ${{ steps.main.conclusion }}
      log: ${{ steps.main.outputs.log }}
    steps:
        - name: Docker system cleanup
          run: |
            docker system prune -a --filter "until=48h" --force || true

        - name: Docker pull image
          run: |
            docker pull nemoci.azurecr.io/nemo_reinforcer_container:${{ github.run_id }}
        
        # NOTE: under certain circumstances, the checkout action cannot clean up the workspace properly, so
        # this workaround is needed to ensure that the workspace is clean by removing all files created by root.
        #
        # Tracking issue: https://github.com/NVIDIA/reinforcer/issues/76
        #
        # The error observed looked like this from the checkout action:
        #      Run actions/checkout@v4
        #      ...
        #      Deleting the contents of '/home/azureuser/actions-runner/_work/reinforcer/reinforcer'
        #      Error: File was unable to be removed Error: EACCES: permission denied, rmdir '/home/azureuser/actions-runner/_work/reinforcer/reinforcer/docs/_build/doctest'
        - name: Forcefully clean up the repository
          run: |
            docker run --rm -u root \
              -v /home/azureuser/actions-runner/_work/reinforcer/reinforcer:/home/azureuser/actions-runner/_work/reinforcer/reinforcer \
              nemoci.azurecr.io/nemo_reinforcer_container:${{ github.run_id }} \
              bash -x -c "ls -lah /home/azureuser/actions-runner/_work/reinforcer/reinforcer && shopt -s dotglob && rm -rf /home/azureuser/actions-runner/_work/reinforcer/reinforcer/*"

        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Start container
          run: |
            # TODO: disable caching (--env UV_CACHE_DIR=/uv_cache --volume /mnt/datadrive/TestData/reinforcer/uv_cache:/uv_cache)
            #       for now since it results in
            # 
            # Using CPython 3.12.9 interpreter at: /home/ray/anaconda3/bin/python3
            # Creating virtual environment at: .venv
            #   × Failed to download and build `antlr4-python3-runtime==4.9.3`
            #   ├─▶ Failed to create temporary virtualenv
            #   ╰─▶ Permission denied (os error 13)
            #   help: `antlr4-python3-runtime` (v4.9.3) was included because
            #         `nemo-reinforcer` (v0.0.1) depends on `math-verify` (v0.7.0) which
            #         depends on `latex2sympy2-extended==1.10.1` (v1.10.1) which depends on
            #         `antlr4-python3-runtime>=4.9.3, <=4.13.2`
            #
            # Something about our CI machines causes this issue since it is not reproducible locally.
            
            docker run --rm -d --name nemo_container_${{ github.run_id }} --runtime=nvidia --gpus all --shm-size=64g \
              --env TRANSFORMERS_OFFLINE=0 \
              --env HYDRA_FULL_ERROR=1 \
              --env HF_HOME=/home/TestData/reinforcer/hf_home \
              --env HF_DATASETS_CACHE=/home/TestData/reinforcer/hf_datasets_cache \
              --env REINFORCER_REPO_DIR=/opt/reinforcer \
              --volume $PWD:/opt/reinforcer \
              --volume /mnt/datadrive/TestData/reinforcer/datasets:/opt/reinforcer/datasets:ro \
              --volume /mnt/datadrive/TestData/reinforcer/checkpoints:/home/TestData/reinforcer/checkpoints:ro \
              --volume /mnt/datadrive/TestData/reinforcer/hf_home/hub:/home/TestData/reinforcer/hf_home/hub \
              --volume /mnt/datadrive/TestData/reinforcer/hf_datasets_cache:/home/TestData/reinforcer/hf_datasets_cache \
              nemoci.azurecr.io/nemo_reinforcer_container:${{ github.run_id }} \
              bash -c "sleep $(( ${{ inputs.TIMEOUT }} * 60 + 60 ))"
  
        - id: main
          name: Run main script
          timeout-minutes: ${{ inputs.TIMEOUT }}
          env:
            HF_TOKEN: ${{ secrets.HF_TOKEN }}
          run: |
            # Print the host driver for debugging
            nvidia-smi
            mkdir -p ${{ github.run_id }}
            cd ${{ github.run_id }}/

            set +e
            (
            set -e

            cmd=$(cat <<"RUN_TEST_EOF"
            # This is needed since we create virtualenvs in the workspace, so this allows it to be cleaned up if necessary
            umask 000

            nvidia-smi

            # In case git commands need to be run inside Reinforcer
            git config --global --add safe.directory $REINFORCER_REPO_DIR
            ${{ inputs.SCRIPT }}
            RUN_TEST_EOF
            )
            docker exec -u root -e HF_TOKEN nemo_container_${{ github.run_id }} bash -eux -o pipefail -c "$cmd"
            ) 2> >(tee err.log)

            EXIT_CODE=$?

            echo "log=$(tail -c 2000 err.log |  base64 -w 0)" >> "$GITHUB_OUTPUT"
            
            exit $EXIT_CODE

        - uses: "NVIDIA/NeMo/.github/actions/cancel-workflow@main"
          if: failure() && inputs.IS_OPTIONAL == false

        - name: after_script
          if: always() && inputs.AFTER_SCRIPT != ':'
          run: |
            cmd=$(cat <<"RUN_TEST_EOF"
            ${{ inputs.AFTER_SCRIPT }}
            RUN_TEST_EOF
            )
            docker exec nemo_container_${{ github.run_id }} bash -eux -o pipefail -c "$cmd"

        - name: final_script_external
          if: always() && inputs.FINAL_SCRIPT_EXTERNAL != ':'
          run: |
            cmd=$(cat <<"RUN_TEST_EOF"
            ${{ inputs.FINAL_SCRIPT_EXTERNAL }}
            RUN_TEST_EOF
            )
            bash -eux -o pipefail -c "$cmd"

        - name: Container shutdown
          if: always()
          run: |
            docker container stop nemo_container_${{ github.run_id }} || true
            docker container rm nemo_container_${{ github.run_id }} || true
